rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for cleaner, more reusable rules
    function isSignedIn() {
      return request.auth != null;
    }

    function isEventOwner(eventId) {
      // Check if the requesting user's ID matches the userId on the event document.
      return get(/databases/$(database)/documents/events/$(eventId)).data.userId == request.auth.uid;
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      // Allow creation if the user is signed in and the event's userId matches their own.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;

      // Allow read and delete only for the user who owns the event.
      allow read, delete: if isSignedIn() && isEventOwner(eventId);

      // Rules for the 'expenses' subcollection nested under an event
      match /expenses/{expenseId} {
        // Allow read, create, and delete of expenses only for the owner of the parent event.
        allow read, create, delete: if isSignedIn() && isEventOwner(eventId);
      }
    }
  }
}
