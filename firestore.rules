rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for the 'events' collection
    match /events/{eventId} {
      // Allow a user to read or delete an event if they are the owner.
      allow get, delete, update: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow a user to list events only if they are querying for their own events.
      allow list: if request.auth != null && request.auth.uid == request.query.where.value;

      // Allow a user to create an event if the 'userId' in the new document matches their own.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Rules for the 'expenses' subcollection
      match /expenses/{expenseId} {
        // Allow full read/write access to expenses if the user owns the parent event.
        // This is checked by getting the parent event document and comparing its 'userId'.
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/events/$(eventId)).data.userId == request.auth.uid;
      }
    }
  }
}
