rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the event.
    function isEventOwner(eventId) {
      return get(/databases/$(database)/documents/events/$(eventId)).data.userId == request.auth.uid;
    }

    // Rules for the 'events' collection.
    match /events/{eventId} {
      // Users can only read, create, update, or delete events if they are the owner.
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.userId;
      
      // A user creating an event must be the owner.
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;

      // Rules for the 'expenses' subcollection.
      match /expenses/{expenseId} {
        // Users can list, get, create, update, and delete expenses
        // only if they are the owner of the parent event.
        allow read, write: if isSignedIn() && isEventOwner(eventId);
      }
    }
  }
}
