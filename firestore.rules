rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /events/{eventId} {
      // Allow a user to create an event if the userId matches their auth uid.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Allow a user to read, update, or delete their own event document.
      allow get, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Allow a user to list events only if they are querying by their own userId.
      allow list: if request.auth != null && request.query.get("where")[0][1] == "userId" && request.query.get("where")[0][2] == request.auth.uid;

      // Rules for the nested 'expenses' subcollection
      match /expenses/{expenseId} {
        // Allow full access to expenses if the user owns the parent event.
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/events/$(eventId)).data.userId == request.auth.uid;
      }
    }
  }
}
